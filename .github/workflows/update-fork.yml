name: Sync, Build, and Release

on:
  schedule:
    - cron: '0 * * * *' # Запуск каждый час
  workflow_dispatch: # Возможность ручного запуска

jobs:
  sync_and_build:
    runs-on: ubuntu-latest

    steps:
      # 1. Клонируем форк
      - name: Checkout Fork
        uses: actions/checkout@v3
        with:
          repository: nix155/qdomyos-zwift
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0

      # 2. Настраиваем Upstream и синхронизируем с оригиналом
      - name: Sync with Upstream
        run: |
          git remote add upstream https://github.com/cagnulein/qdomyos-zwift.git
          git fetch upstream
          if git diff --quiet HEAD upstream/master; then
            echo "No updates. Skipping build."
            # exit 0
          fi
          git merge upstream/master --no-edit
          git push origin master

      # 3. Устанавливаем зависимости
      - name: Install Dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install --no-install-recommends -y \
            git \
            ca-certificates \
            qtquickcontrols2-5-dev \
            qtconnectivity5-dev \
            qtbase5-private-dev \
            qtpositioning5-dev \
            libqt5charts5-dev \
            libqt5networkauth5-dev \
            libqt5websockets5-dev \
            qml-module* \
            libqt5texttospeech5-dev \
            qtlocation5-dev \
            qtmultimedia5-dev \
            g++ \
            make \
            wget \
            unzip
          sudo rm -rf /var/lib/apt/lists/*

      # 4. Обновляем подмодули и компилируем проект
      - name: Build Binary
        run: |
          git submodule update --init src/smtpclient/
          git submodule update --init src/qmdnsengine/
          git submodule update --init tst/googletest/
          mkdir -p build
          cd src
          qmake qdomyos-zwift.pro
          make -j$(nproc)

      # 5. Упаковываем бинарник с добавлением даты
      - name: Package Binary
        run: |
          mkdir -p dist
          TIMESTAMP=$(date +"%Y%m%d-%H%M")
          tar -czvf dist/qdomyos-zwift-${TIMESTAMP}.tar.gz src/qdomyos-zwift

      # 6. Создаём релиз и публикуем упакованный бинарник
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.run_number }}
          release_name: "Release ${{ github.run_number }}"
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/qdomyos-zwift-*.tar.gz
          asset_name: qdomyos-zwift.tar.gz
          asset_content_type: application/gzip
